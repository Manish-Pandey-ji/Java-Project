pipeline {
    agent any
    tools {
        jdk 'JDK21'
        maven 'Maven3'
    }
    environment {
        
        SONARQUBE_SERVER_URL = 'http://localhost:9000'
        SONARQUBE_PROJECT_KEY = 'My_Project_key'
    }
    
    stages {
        stage('Checkout') {
            steps {
                
                checkout([$class: 'GitSCM', 
                          branches: [[name: '*/main']], 
                          userRemoteConfigs: [[url: 'https://github.com/Manish-Pandey-ji/Java-Project.git']]
                ])
            }
        }

        stage('Build') {
            steps {
               
                bat 'mvn clean compile install'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                
                withSonarQubeEnv('SonarQube_Server') {
                    bat '''
                       mvn clean verify sonar:sonar \
                          -Dsonar.projectKey=My_Project_key \
                          -Dsonar.projectName='My_Project_key' \
                          -Dsonar.host.url=http://localhost:9000 \
                          -Dsonar.token=sqp_a8a0301fa305b0da33bcd43d423644a40dbecccf
                    '''
                }
            }
        }
        stage('ZAP Scan') {
            steps {
                bat 'docker run --rm -v "%cd%\\zap-report:/zap/report" owasp/zap'
            }
        }
    }
}
